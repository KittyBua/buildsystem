#!/bin/sh

read model < /etc/model

im () {
    ERR=0
    FOUND=0
    if [ $(echo $1|grep -o '.\{3\}$') != ".ko" ]; then
        new=$1.ko
        shift
        set $new $*
    fi
    if [ -e /var/lib/$1 ]; then
        insmod /var/lib/$*
        ERR=$?
        FOUND=1
    elif [ -e /swap/lib/$1 ]; then
        insmod /swap/lib/$*
        ERR=$?
        FOUND=1
    elif [ -e /lib/modules/$1 ]; then
        insmod /lib/modules/$*
        ERR=$?
        FOUND=1
    else
        echo -e "\033[01;31mloading: $1 -> [ERROR - MODULE NOT FOUND]\033[00m"
  fi
  if [ $FOUND -eq 1 ]; then
    if [ $ERR != 0 ]; then
      echo -e "\033[01;31mloading: $1 ($ERR) -> [ERROR]\033[00m"
      oled -tc "[ERROR] $1"
      echo "[ERROR] $1\n" >> /tmp/bootlog.log
    else
      echo -e "\033[01;32mloading: $1 ($ERR) -> [OK]\033[00m"
    fi
  fi
}

if [ -e /var/etc/.firstboot ]; then
/usr/bin/passwd root <<EOF
root
root
EOF
  rm /var/etc/.firstboot
fi

mount -t proc proc /proc
mount -t sysfs sys /sys
mount -t tmpfs tmp /tmp
mount -t tmpfs media /media
mount -t tmpfs mnt /mnt
#mkdir -p /media/hdd
mkdir -p /dev/pts
mount -t devpts devpts /dev/pts
echo /sbin/mdev >/proc/sys/kernel/hotplug
mdev -s

echo "starting interface"
/etc/init.d/mountall start

[ -f /var/etc/modules.default ] && eval $(sed -e 's/#.*//' -e '/^\s*$/d' -e 's/^\(.*\)/im \0;/' < /var/etc/modules.default)

[ -f /var/etc/modules.extra ] && eval $(sed -e 's/#.*//' -e '/^\s*$/d' -e 's/^\(.*\)/im \0;/' < /var/etc/modules.extra)

if [ -e /var/backup_flash.tar.gz ]; then
  oled -tc "Restore Settings..."
  tar xvf /var/backup_flash.tar.gz -C /
  rm -f /var/backup_flash.tar.gz
fi

if [ -e /sys/class/net/lo ]; then
	/sbin/ifconfig lo up
fi
if [ -e /sys/class/net/eth0 ]; then
	/sbin/ifconfig eth0 up
fi
if [ -e /sys/class/net/eth1 ]; then
	/sbin/ifconfig eth1 up
fi
if [ -e /sys/class/net/sys0 ]; then
	/sbin/ifconfig sys0 up
fi

if [ ! -e /lib/modules/dvb-bcm.ko ]; then
	(cd /lib/modules; ln -s dvb-bcm*.ko dvb-bcm.ko)
fi

if [ ! -e /dev/brcm0 ]; then
	if [ -e /usr/bin/bp3flash.sh ]; then
		/usr/bin/bp3flash.sh 2>/dev/null
	fi
	im procmk.ko
	im bcm_event.ko
	im dvb_base.ko
	/usr/bin/dvb_server &
	mknod -m a=rw /dev/brcm0 c 30 0
	/usr/bin/init_client /lib/modules/dvb-bcm.ko /lib/modules/brcmfb.ko &
fi

if [ -e /var/tuxbox/config/.bootlogo ]; then
    (
      while [ ! -c /dev/dvb/adapter0/video0 ]; do
        usleep 100000
      done
      showiframe /usr/share/tuxbox/neutrino/icons/bootlogo.m2v
    ) &
fi

while [ ! -c /dev/fb0 ]; do
	usleep 100000
done

echo 100 > /proc/stb/fp/oled_brightness
oled -tc "Booting...TC-NMP"

/bin/initfb $(sed -n 's/osd_resolution=//p' /var/tuxbox/config/neutrino.conf)

echo "setup network"
read hstname < /etc/hostname
if [ "$hstname" == "$model" ]; then
	hwaddr=$(ifconfig eth0 | awk '/HWaddr/ { split($5,v,":"); print v[4] v[5] v[6] }')
	echo "${model}-${hwaddr}" > /etc/hostname
fi
/etc/init.d/hostname start
/etc/init.d/portmap start
/usr/sbin/inetd
NFS=$(grep -c nfs /proc/cmdline)
  if [ "$NFS" -eq "1" ]; then
    echo "Booting from nfs, don't set network"
  else
    if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=$(grep -c dhcp /etc/network/interfaces)
      if [ "$DHCP" -eq "1" ]; then
        echo "Starting dhcp"
        /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
    fi
  fi
/sbin/ifconfig lo 127.0.0.1 up


  #date fix
  ntp="$(sed -n 's/network_ntpserver=//p' /var/tuxbox/config/neutrino.conf)"
  rdate ${ntp:-time.fu-berlin.de}
  if [ "$?" != "0" ]; then
    datefix=$(cat /.version | grep "version=" | grep -v image | awk -F "=" '{print $2}')
    if [ "$datefix" != "" ]; then
      date -s ${datefix:4}
    else
      date -s "202010011200"
    fi
  fi
  date "+DATE: %m/%d/%y%nTIME: %H:%M:%S"

  if [ -e /var/tuxbox/config/.mbefore ]; then
    /etc/init.d/mount_before
  fi

  if [ -e /var/tuxbox/config/.nfsd ]; then
    if [ ! -e /etc/exports ]; then
      echo "/media/hdd *(ro,wdelay,nohide,insecure,no_root_squash,no_all_squash,no_subtree_check,sync)" >/etc/exports
    fi
    if [ ! -e /etc/hosts.allow ]; then
      echo 'ALL: ALL' > /etc/hosts.allow
    fi
    touch /var/lib/nfs/etab
    touch /var/lib/nfs/rmtab
    touch /var/lib/nfs/xtab
    touch /var/lib/nfs/state
    /usr/sbin/rpc.nfsd 1
    /usr/sbin/rpc.mountd -V 3
    /usr/sbin/exportfs -ra
  fi

  if [ -e /var/tuxbox/config/.xupnpd ]; then
    /usr/bin/xupnpd &
  fi

  if [ -e /var/tuxbox/config/.crond ]; then
    mkdir -p /var/spool/cron/crontabs
    touch /var/spool/cron/crontabs/root
    /usr/sbin/crond &
  fi

  if [ -e /var/tuxbox/config/.dropbear ]; then
    /etc/init.d/dropbear start &
  fi

  if [ -e /var/tuxbox/config/.tuxcald ]; then
    echo "starting tuxcald ..."
    /etc/init.d/tuxcald start &
  fi

  if [ -e /var/tuxbox/config/.tuxmaild ]; then
    echo "starting tuxmaild ..."
    /etc/init.d/tuxmaild start &
  fi

  if [ -e /var/tuxbox/config/.djmount ]; then
    mkdir -p /media/upnp
    /usr/bin/djmount /media/upnp &
  fi

  if [ -e /var/tuxbox/config/.samba ]; then
    /etc/init.d/samba start &
  fi

  if [ -e /var/tuxbox/config/.fritzcall ]; then
    /var/tuxbox/plugins/fb.sh start >/dev/null 2>&1
  fi

if [ -e /usr/share/tuxbox/neutrino/control/migration.sh ]; then
    chmod 755 /usr/share/tuxbox/neutrino/control/migration.sh
    /usr/share/tuxbox/neutrino/control/migration.sh
fi

# fix frontend.conf (uni_qrg->uni_freq)
	[ -e /var/tuxbox/config/zapit/frontend.conf ] && sed -i "s/_uni_qrg=/_uni_freq=/g" /var/tuxbox/config/zapit/frontend.conf

if [ -e /var/bin/tangos ]; then
    chmod 755 /var/bin/tangos
    /var/bin/tangos
fi

if [ -e /etc/init.d/before_gui ]; then
    chmod 755 /etc/init.d/before_gui
    /etc/init.d/before_gui
fi

if [ -e /var/tuxbox/config/.lcd4l ]; then
    /usr/bin/lcd4linux
fi

hdd_idle="$(sed -n 's/hdd_sleep=//p' /var/tuxbox/config/neutrino.conf)"
if [ "$hdd_idle" == "" ]; then
    hdd_idle="60"
fi
/sbin/hd-idle -i $((hdd_idle*5))

if [ -e /var/tuxbox/config/.bootlogo ]; then
    killall -9 showiframe
fi


until false
do
    echo "starting GUI ->"
    chmod 755 /usr/bin/neutrino
    if [ -e /tmp/neutrino ]; then
      chmod 755 /tmp/neutrino
      /tmp/neutrino
    else
      /usr/bin/neutrino -v 0
    fi
    rtv=$?
    echo "GUI ended <- RTV: " $rtv
    case "$rtv" in
      0) echo "0"
        echo "SHUTDOWN"
        init 0;;
      1) echo "1"
        echo "REBOOT"
        oled -tc "*-*"
        init 6;;
      3) echo "3"
        echo "RESTART"
        oled -tc "RESTART"
        sync;;
      *) echo "*"
        echo -e "\033[01;31mERROR: $rtv\033[00m"
        oled -tc "*ERROR*"
        #init 6
        ;;
    esac
done
oled -tc "*-*"

#never reached
oled -tc "REBOOT $model"
echo "REBOOT $model"
reboot -f
