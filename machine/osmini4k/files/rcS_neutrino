#!/bin/sh

read model < /etc/model

mount -t proc proc /proc
mount -t sysfs sys /sys
mount -t tmpfs tmp /tmp
mount -t tmpfs media /media
mount -t tmpfs mnt /mnt
#mkdir -p /media/hdd
mkdir -p /dev/pts
mount -t devpts devpts /dev/pts

mount -o remount,rw /
ln -sf /proc/mounts /dev/mtab

if [ -e /var/etc/.firstboot ]; then
/usr/bin/passwd root <<EOF
root
root
EOF
  rm /var/etc/.firstboot
fi

echo /sbin/mdev >/proc/sys/kernel/hotplug
mdev -s

echo -n "add mmcblks in /dev/block"
/etc/init.d/mmcblk-by-name

echo -n "check partitions"
/etc/init.d/check_partitions

echo "starting interface"
/etc/init.d/mountall start

insmod /lib/modules/avl6261.ko
insmod /lib/modules/avl6862.ko
insmod /lib/modules/si2183.ko
insmod /lib/modules/ci.ko
insmod /lib/modules/brcmstb-decoder.ko
insmod /lib/modules/brcmstb-osmini4k.ko

#if [ -e /lib/modules/wlan.ko ]; then
#  insmod /lib/modules/cfg80211.ko
#  insmod /lib/modules/wlan.ko
#fi

# load moduls from modules.extra ( kerneloptions )
[ -f /var/etc/modules.extra ] && eval `awk '{ if ($1) print "insmod /lib/modules/" $1 ".ko " $2,$3,$4,$5,$6,$7,$8,$9 "; "}' < /var/etc/modules.extra`

if [ -e /var/backup_flash.tar.gz ]; then
  tar xvf /var/backup_flash.tar.gz -C /
  rm -f /var/backup_flash.tar.gz
fi

if [ -e /var/tuxbox/config/.bootlogo ]; then
  showiframe /usr/share/tuxbox/neutrino/icons/bootlogo.m2v &
fi

ln -s /dev/dbox/lcd0 /dev/dbox/oled0

echo "Booting...TC-NMP" > /dev/dbox/lcd0

echo "setup network"
read hstname < /etc/hostname
if [ "$hstname" == "$model" ]; then
	hwaddr=$(ifconfig eth0 | awk '/HWaddr/ { split($5,v,":"); print v[4] v[5] v[6] }')
	echo "${model}-${hwaddr}" > /etc/hostname
fi
/etc/init.d/hostname start
/etc/init.d/portmap start
/usr/sbin/inetd
NFS=$(grep -c nfs /proc/cmdline)
  if [ "$NFS" -eq "1" ]; then
    echo "Booting from nfs, don't set network"
    elif [ -e /var/tuxbox/config/.bootargs ]; then
    echo "using ip set via bootargs, don't reset network"
  else
    if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=$(grep -c dhcp /etc/network/interfaces)
      if [ "$DHCP" -eq "1" ]; then
        echo "Starting dhcp"
        /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
    fi
  fi
/sbin/ifconfig lo 127.0.0.1 up

  #date fix
  ntp="$(sed -n 's/network_ntpserver=//p' /var/tuxbox/config/neutrino.conf)"
  rdate ${ntp:-time.fu-berlin.de}
  if [ "$?" != "0" ]; then
    datefix=$(cat /.version | grep "version=" | grep -v image | awk -F "=" '{print $2}')
    if [ "$datefix" != "" ]; then
      date -s ${datefix:4}
    else
      date -s "202010011200"
    fi
  fi
  date "+DATE: %m/%d/%y%nTIME: %H:%M:%S"

  if [ -e /var/tuxbox/config/.mbefore ]; then
    echo "starting early mount ..."
    /etc/init.d/mount_before
  fi

  if [ -e /var/tuxbox/config/.nfsd ]; then
    echo "starting nfd ..."
    if [ ! -e /etc/exports ]; then
      echo "/media/hdd *(ro,wdelay,nohide,insecure,no_root_squash,no_all_squash,no_subtree_check,sync)" >/etc/exports
    fi
    if [ ! -e /etc/hosts.allow ]; then
      echo 'ALL: ALL' > /etc/hosts.allow
    fi
    touch /var/lib/nfs/etab
    touch /var/lib/nfs/rmtab
    touch /var/lib/nfs/xtab
    touch /var/lib/nfs/state
    /usr/sbin/rpc.nfsd 1
    /usr/sbin/rpc.mountd -V 3
    /usr/sbin/exportfs -ra
  fi

  if [ -e /usr/share/tuxbox/neutrino/control/migration.sh ]; then
    echo "starting migration ..."
    chmod 755 /usr/share/tuxbox/neutrino/control/migration.sh
    /usr/share/tuxbox/neutrino/control/migration.sh
  fi

  if [ -e /var/tuxbox/config/.xupnpd ]; then
    echo "starting xupnpd ..."
    /usr/bin/xupnpd &
  fi

  if [ -e /var/tuxbox/config/.crond ]; then
    echo "starting crond ..."
    mkdir -p /var/spool/cron/crontabs
    touch /var/spool/cron/crontabs/root
    /usr/sbin/crond &
  fi

  if [ -e /var/tuxbox/config/.dropbear ]; then
    echo "starting dropbear ..."
    /etc/init.d/dropbear start &
  fi

  if [ -e /var/tuxbox/config/.tuxcald ]; then
    echo "starting tuxcald ..."
    /etc/init.d/tuxcald start &
  fi

  if [ -e /var/tuxbox/config/.tuxmaild ]; then
    echo "starting tuxmaild ..."
    /etc/init.d/tuxmaild start &
  fi

  if [ -e /var/tuxbox/config/.djmount ]; then
    echo "starting djmount ..."
    mkdir -p /media/upnp
    /usr/bin/djmount /media/upnp &
  fi

  if [ -e /var/tuxbox/config/.samba ]; then
    echo "starting samba ..."
    /etc/init.d/samba start &
  fi

  if [ -e /var/tuxbox/config/.fritzcall ]; then
    echo "starting fritzcall ..."
    /var/tuxbox/plugins/fb.sh start >/dev/null 2>&1
  fi

# fix frontend.conf (uni_qrg->uni_freq)
[ -e /var/tuxbox/config/zapit/frontend.conf ] && sed -i "s/_uni_qrg=/_uni_freq=/g" /var/tuxbox/config/zapit/frontend.conf

if [ -e /var/bin/tangos ]; then
    chmod 755 /var/bin/tangos
    /var/bin/tangos
fi

if [ -e /etc/init.d/before_gui ]; then
    chmod 755 /etc/init.d/before_gui
    /etc/init.d/before_gui
fi

if [ -e /var/tuxbox/config/.lcd4l ]; then
    echo "starting lcd4linux ..."
    /usr/bin/lcd4linux
fi

hdd_idle="$(sed -n 's/hdd_sleep=//p' /var/tuxbox/config/neutrino.conf)"
if [ "$hdd_idle" == "" ]; then
    hdd_idle="60"
fi
/sbin/hd-idle -i $((hdd_idle*5))

if [ -e /var/tuxbox/config/.bootlogo ]; then
    killall -9 showiframe
fi


until false
do
    echo "starting GUI ->"
    chmod 755 /usr/bin/neutrino
    if [ -e /tmp/neutrino ]; then
      chmod 755 /tmp/neutrino
      /tmp/neutrino
    else
      /usr/bin/neutrino -v 0
    fi
    rtv=$?
    echo "GUI ended <- RTV: " $rtv
    case "$rtv" in
      0) echo "0"
        echo "SHUTDOWN"
      init 0;;
      1) echo "1"
        echo "REBOOT"
        echo "      *-*       " > /dev/dbox/lcd0
      init 6;;
      3) echo "3"
        echo "RESTART"
        echo "    RESTART     " > /dev/dbox/lcd0
      sync;;
      *) echo "*"
        echo -e "\033[01;31mERROR: $rtv\033[00m"
        echo "    *ERROR*     " > /dev/dbox/lcd0
      init 6;;
    esac
done
echo "      *-*       " > /dev/dbox/lcd0

#never reached
echo "REBOOT $model" > /dev/dbox/lcd0
echo "REBOOT $model"
reboot -f
